{"ast":null,"code":"var _jsxFileName = \"/Users/saninzulphi/Desktop/PA/ml-platform/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [dataset, setDataset] = useState(null);\n  const [algorithm, setAlgorithm] = useState('');\n  const handleDrop = acceptedFiles => {\n    if (acceptedFiles.length > 0) {\n      setDataset(acceptedFiles[0]);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n  const runAlgorithm = () => {\n    if (!dataset || !algorithm) {\n      alert('Please upload a dataset and select an algorithm!');\n      return;\n    }\n    alert(`Running ${algorithm} on dataset: ${dataset.name}`);\n    // Logic for sending data to backend can be implemented here\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"ML Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      style: {\n        border: '2px dashed #ccc',\n        padding: '20px',\n        marginBottom: '20px',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Drag & drop your dataset file here, or click to select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), dataset && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Uploaded File: \", dataset.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"algorithm-select-label\",\n        children: \"Select Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"algorithm-select-label\",\n        value: algorithm,\n        onChange: e => setAlgorithm(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Logistic Regression\",\n          children: \"Logistic Regression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Random Forest\",\n          children: \"Random Forest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"K-Means Clustering\",\n          children: \"K-Means Clustering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginTop: '20px'\n      },\n      onClick: runAlgorithm,\n      children: \"Run Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YURr4DQNprgGQgg6wxFLLH4ioHc=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Button","Select","MenuItem","FormControl","InputLabel","useDropzone","jsxDEV","_jsxDEV","App","_s","dataset","setDataset","algorithm","setAlgorithm","handleDrop","acceptedFiles","length","getRootProps","getInputProps","onDrop","runAlgorithm","alert","name","children","variant","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","marginBottom","cursor","fullWidth","marginTop","id","labelId","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["/Users/saninzulphi/Desktop/PA/ml-platform/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Button, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\n\nconst App = () => {\n  const [dataset, setDataset] = useState(null);\n  const [algorithm, setAlgorithm] = useState('');\n\n  const handleDrop = (acceptedFiles) => {\n    if (acceptedFiles.length > 0) {\n      setDataset(acceptedFiles[0]);\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop: handleDrop });\n\n  const runAlgorithm = () => {\n    if (!dataset || !algorithm) {\n      alert('Please upload a dataset and select an algorithm!');\n      return;\n    }\n    alert(`Running ${algorithm} on dataset: ${dataset.name}`);\n    // Logic for sending data to backend can be implemented here\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" style={{ margin: '20px 0' }}>\n        ML Platform\n      </Typography>\n\n      {/* Dataset Upload Section */}\n      <div {...getRootProps()} style={{ border: '2px dashed #ccc', padding: '20px', marginBottom: '20px', cursor: 'pointer' }}>\n        <input {...getInputProps()} />\n        <Typography>Drag & drop your dataset file here, or click to select</Typography>\n      </div>\n      {dataset && <Typography>Uploaded File: {dataset.name}</Typography>}\n\n      {/* Algorithm Selection */}\n      <FormControl fullWidth style={{ marginTop: '20px' }}>\n        <InputLabel id=\"algorithm-select-label\">Select Algorithm</InputLabel>\n        <Select\n          labelId=\"algorithm-select-label\"\n          value={algorithm}\n          onChange={(e) => setAlgorithm(e.target.value)}\n        >\n          <MenuItem value=\"Logistic Regression\">Logistic Regression</MenuItem>\n          <MenuItem value=\"Random Forest\">Random Forest</MenuItem>\n          <MenuItem value=\"K-Means Clustering\">K-Means Clustering</MenuItem>\n        </Select>\n      </FormControl>\n\n      {/* Run Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginTop: '20px' }}\n        onClick={runAlgorithm}\n      >\n        Run Algorithm\n      </Button>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}